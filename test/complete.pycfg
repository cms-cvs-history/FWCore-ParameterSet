{
'procname': 'PROCESSNAME'
, 'main_input': {
'@classname': ('string', 'tracked', 'PoolSource'), 'fileNames': ('vstring', 'untracked', [ r'"file:no_real_file_here"' ]), 'debugFlag': ('bool', 'untracked', 'false'), 'maxEvents': ('int32', 'untracked', '-1'), 'debugVebosity': ('uint32', 'untracked', '10')}
 # end of main_input
, 'looper': {
'@classname': ('string', 'tracked', 'ALooper'), 'nLoops': ('uint32', 'tracked', '10')}
 # end of looper
# psets
, 'psets': {
} #end of psets
# modules
, 'modules': {
'a': {'@classname': ('string', 'tracked', 'AProducer'), 'a': ('int32', 'tracked', '32'), 'h1': ('uint32', 'tracked', '0xCFDFEFFF'), 'b': ('vdouble', 'tracked', [ '1.1', '2.2' ]), 'c': ('vstring', 'tracked', [  ]), 'd': ('vstring', 'tracked', [ r"'boo'", r'"yah"' ]), 'nothing': ('string', 'tracked', r'""'), 'moreNothing': ('string', 'tracked', r"''"), 'absolutelyNothing': ('string', 'tracked', r"'\0'"), 'justATick': ('string', 'tracked', r"'\''")}
,'b': {'@classname': ('string', 'tracked', 'BProducer'), 'a': ('int32', 'untracked', '14'), 'b': ('string', 'tracked', r'"sillyness ensues"'), 'c': ('PSet', 'tracked', {'a': ('string', 'tracked', r"'nested'"), 'b': ('string', 'tracked', r'"more"')}), 'd': ('VPSet', 'tracked', [{'i': ('int32', 'tracked', '10101'), 'b': ('bool', 'tracked', 'false')},{}]), 'e': ('VPSet', 'tracked', []), 'f': ('VPSet', 'tracked', [{'inner': ('VPSet', 'tracked', [])},{}]), 'tag': ('InputTag', 'tracked', 'y:z'), 'tags': ('VInputTag', 'tracked', [ 'a:b', 'c', 'd:e' ])}
,'c': {'@classname': ('string', 'tracked', 'CProducer')}
,'y': {'@classname': ('string', 'tracked', 'PoolOutputModule'), 'fileName': ('string', 'untracked', r'"file:myfile_y.root"'), 'maxEvents': ('int32', 'untracked', '2112')}
,'z': {'@classname': ('string', 'tracked', 'PoolOutputModule'), 'fileName': ('string', 'untracked', r'"file:myfile_z.root"'), 'maxEvents': ('int32', 'untracked', '91624')}
,'vp': {'@classname': ('string', 'tracked', 'VPProducer'), 'c': ('PSet', 'tracked', {'d': ('VPSet', 'tracked', [{'a': ('int32', 'tracked', '32'), 'd': ('PSet', 'tracked', {'e': ('VPSet', 'tracked', [])})},{'b': ('int32', 'tracked', '12')}])})}
} #end of modules
# es_modules
, 'es_modules': {
'ESMType1@esm1': { '@label': ('string','tracked', 'esm1'), '@classname': ('string', 'tracked', 'ESMType1'), 's': ('string', 'tracked', r'"hi"')}
,'ESMType2@': { '@label': ('string','tracked', ''), '@classname': ('string', 'tracked', 'ESMType2'), 'a': ('int32', 'tracked', '3')}
} #end of es_modules
# es_sources
, 'es_sources': {
'ESSType1@ess1': { '@label': ('string','tracked', 'ess1'), '@classname': ('string', 'tracked', 'ESSType1'), 'b': ('int32', 'tracked', '2')}
,'ESSType1@': { '@label': ('string','tracked', ''), '@classname': ('string', 'tracked', 'ESSType1'), 'b': ('int32', 'tracked', '0')}
,'ESSType2@': { '@label': ('string','tracked', ''), '@classname': ('string', 'tracked', 'ESSType2'), 'x': ('double', 'tracked', '1.5')}
} #end of es_sources
# es_prefers
, 'es_prefers': {
} #end of es_prefers
# output modules (names)
, 'output_modules': [ 'y'
,'z'
 ]
# modules with secsources (names)
, 'modules_with_secsources': [  ]
# sequences
, 'sequences': {
's1' : '(a&b)'
,'s2' : 'b'
,'s3' : 'a'
,'s4' : 'a'
} #end of sequences
# paths
, 'paths': {
'p1' : '((a&b),c)'
,'p2' : '(-s1,(s3&s2))'
} #end of paths
# endpaths
, 'endpaths': {
'ep1' : '(y,z)'
,'ep2' : 'z'
} #end of endpaths
# services
, 'services': {
'ServiceType1': {'@classname': ('string', 'tracked', 'ServiceType1'), 'b': ('double', 'tracked', '2')}
,'ServiceType2': {'@classname': ('string', 'tracked', 'ServiceType2'), 'x': ('double', 'tracked', '1.5')}
} #end of services
# schedule
, 'schedule': 'p1,p2,ep1,ep2'
}